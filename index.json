[
{
	"uri": "/2-prerequiste/2.1-create-cloud9/",
	"title": "Create Cloud9 on AWS",
	"tags": [],
	"description": "",
	"content": "Cloud9 on AWS Sign in to the AWS Management Console and open the VPC console at VPC console. Create VPC VPC setting Complete create Subnet - Edit subnet setting for public2 Auto-assign IP setting Auto-assign IP setting for public1 Auto-assign IP setting Open the Cloud9 console at Cloud9 console Choose Create environment Create environment New EC2 instance Complete create Choose Open on Environment Dashboard "
},
{
	"uri": "/",
	"title": "Linux in AWS Cloud9",
	"tags": [],
	"description": "",
	"content": "Linux in AWS Cloud9 Overview In this lab, you\u0026rsquo;ll learn the basics and practice hands-on lab of Linux in AWS Cloud9 service.\nContent Introduction Preparation "
},
{
	"uri": "/1-introduce/",
	"title": "The Linux Basic Course",
	"tags": [],
	"description": "",
	"content": "Why choose Linux? https://itsfoss.com/linux-runs-top-supercomputers/ https://www.zdnet.com/article/can-the-internet-exist-without-linux/ https://haydenjames.io/81-percent-smartphones-powered-by-linux/ Linux vs DevOps Career opportunities "
},
{
	"uri": "/2-prerequiste/",
	"title": "Prerequiste",
	"tags": [],
	"description": "",
	"content": "Linux in AWS Cloud9 Overview In this lab, you\u0026rsquo;ll learn the basics and practice hands-on lab of Linux in AWS Cloud9 service.\nContent Create Cloud9 Shell Linux Core Concepts Package Management File Archival Security Permission Networking Storage Systemctl "
},
{
	"uri": "/2-prerequiste/2.2-shell/",
	"title": "Working with Shell Basic",
	"tags": [],
	"description": "",
	"content": "Working with Shell Basic Our goal is to create a directory structure, the top most directory which is /home/ec2-user/environment which is already created as it as a home directory but everything else underneath has to be created. To print the present working directory. Run pwd command $ pwd To see the contents of the directory. Run ls command $ ls To make (or) create a directory. Run mkdir command $ mkdir Asia To make (or) create multiple directories. Run mkdir command followed by \u0026lt;directory_name1\u0026gt; \u0026lt;directory_name2\u0026gt; .. \u0026lt;directory_nameN\u0026gt; $ mkdir Europe Africa America To change a directory from the current directory. Run cd \u0026lt;directory_name\u0026gt; $ cd Asia To recursively created directories. Run mkdir -p \u0026lt;directory_name1\u0026gt;/\u0026lt;sub_directory_of_name1\u0026gt; $ mkdir -p India/Mumbai To go back to one directory up. Run cd .. $ cd .. To go back directly to a home directory of the current user from any location in the system. Run cd $ cd 9. To change to a directory with absolute path. Run cd \u0026lt;directory_path\u0026gt;\n$ cd /home/michael To Change to a directory with relative path. Run cd $ cd Asia To move file or directory. Run mv command $ mv /home/ec2-user/environment/michael/Europe/Morocco /home/michael/Africa/\r**or**\r$ mv Europe/Morocco Africa/ To rename a directory. Run mv command $ mv Asia/India/Munbai Asia/India/Mumbai To copy a file to a directory. Run cp \u0026lt;destination_directorypath\u0026gt; command $ cp Asia/India/Mumbai/City.txt Africa/Egypt/Cairo To delete a file from a directory. Run rm /path/ command $ rm Europe/UK/London/Tottenham.txt To copy a directory recursively. Run cp -r command $ cp -r Europe/UK Europe/UnitedKingdom To print the content of a file. Run cat /path/to/ command $ cat Asia/India/Mumbai/City.txt To add a content to a file with cat(redirect) . Run cat \u0026gt; /path/to/ command $ cat \u0026gt; Africa/Egypt/Cairo/City.txt\rCairo\r`Type Ctrl + d from keyboard` To create an empty file. Run touch /path/to/filename command $ touch /Asia/China/Country.txt To get the long list of files and directories. Run ls -l command $ ls -l To list all files including the hidden. Run ls -la command $ ls -a To list all the files in the order they were modified. Run ls -lt command $ ls -lt To list all the files form oldest to newest. Run ls -ltr command $ ls -ltr To check the home directory for a particular user say bob $ grep bob /etc/passwd | cut -d \u0026#34;:\u0026#34; -f6 To check the home directory for a particular user using built in shell variables $ echo $HOME In the command echo Welcome, what does the word Welcome represent with respect to the command? $ echo Welcome - Where Welcome is an argument To check git command type $ type git To create a directory $ mkdir /home/ec2-user/environment/birds To create directories recursively $ mkdir -p /home/ec2-user/environment/fish/salmon Create few more directories $ mkdir -p /home/ec2-user/environment/mammals/elephant\r$ mkdir -p /home/ec2-user/environment/mammals/monkey\r$ mkdir /home/ec2-user/environment/birds/eagle\r$ mkdir -p /home/ec2-user/environment/reptile/snake\r$ mkdir -p /home/ec2-user/environment/reptile/frog\r$ mkdir -p /home/ec2-user/environment/amphibian/salamander To move a directory $ mv /home/ec2-user/environment/reptile/frog /home/ec2-user/environment/amphibian To rename a directory $ mv /home/ec2-user/environment/reptile/snake /home/ec2-user/environment/reptile/crocodile To delete a directory $ rm -r /home/ec2-user/environment/reptile Bash environment variables To print SHELL environment variable $ echo $SHELL To see a list of all environment variables. Run env from the terminal $ env To set an environment variable with in the shell. The value is not carry forward to any other process. $ OFFICE=caleston To set an environment variable we can use the export command. To make the value carry forward to any other process. $ export OFFICE=caleston To persistently set an environment variable over subsequent login or a reboot add them to the ~/.profile or ~/.pam_environment in the users home directory. $ echo \u0026#34;export OFFICE=caleston\u0026#34; \u0026gt;\u0026gt; ~/.profile **or**\r$ echo \u0026#34;export OFFICE=caleston\u0026#34; \u0026gt;\u0026gt; ~/.pam_environment To check the value of a environment variable called LOGNAME $ echo $LOGNAME Path Variable To see the directories defined in path variable. Use the command echo $PATH. $ echo $PATH To check if the location of the command can be identified. Use the which command Syntax: which \u0026lt;command\u0026gt; $ which obs-studio To define a command in the PATH variable. To add we can use the export command. $ export PATH=$PATH:/opt/obs/bin\r$ which obs-studio Customize Bash Prompt To see the value assign to PS1, type echo $PS1 $ echo $PS1 To change the PS1 to only display the word ubuntu-server. $ PS1=\u0026#34;ubuntu-server\u0026#34;\r$ echo $PS1 To customize further, have a look at the below special character. To change the bash prompt to display date, time, username of the current user, the hostname and the current working directory $ PS1=\u0026#34;[\\d \\t \\u@\\h:\\w ] $ \u0026#34; "
},
{
	"uri": "/3-clean/",
	"title": "Clean",
	"tags": [],
	"description": "",
	"content": "Delete Linux in Cloud9 Delete VPC "
},
{
	"uri": "/2-prerequiste/2.3-linux-core-concepts/",
	"title": "Linux Core Concepts",
	"tags": [],
	"description": "",
	"content": "\nLinux Kernel If you have worked with any operating system, you have run into the term kernel.\nThe Linux kernel is monolithic, this means that the kernel carrries out CPU scheduling, memory management and several operations by itselfs.\nThe Linux Kernel is also modular, which means it can extends its capabilities through the use of dynamically loaded kernel modules\nTo understand a kernel in simple terms, let us use an analogy of a College Library. Here the librarian is equal to Linux Kernel.\nThe Kernel is responsible for 4 major tasks\nMemory Management Process Management Device Drivers System calls and Security Linux Kernel Versions let us know identify the ways to identify linux kernel versions\nUse uname command to get the information about the kernel (by itself it doesn\u0026rsquo;t provide much information except that the system uses the Linux Kernel. $ uname Use the uname -r or uname comamnd and option to print the kernel version $ uname -r\r$ uname -a Kernel and User Space One of the important functions of the linux kernel is the Memory Management . We will now see how memory is seperated within the linux kernel .\nMemory is divded into two areas:\nKernel Space\rKernel Code\rkernel Extensions\rDevice Drivers\rUser Space\rC\rJava\rPython\rRuby e.t.c\rDocker Containers\rHow programs running in the User Space work All user programs function by manipulating data that is stored in memory and on disk. User programs get access to data by making special request to the kernel called System Calls\nExamples include, allocating memory by using variables or opening a file. For example, opening a file such as the /etc/os-release to see the operating system installed, results in a system call Lab - Linux Kernel To check the exact kernel version that is running in this system. $ uname -r what is the kernel version in 4.15.0-88-generic? Look for the first digit. In this case, it is 15 What is the major version number of the kernel 4.15.0-88-generic Look for the second digit after the kernel version separated by a . In this case, it is 15 Which command would you run to print the messages generated by the kernel? Type the command dmesg to see the messages.\r$ dmesg To list/count all block devices of type disk that are present in the system Run: lsblk and count the number of disk devices.\r$ lsblk To check total number of physical cores in the system. Run lscpu and multiply the Core(s) per socket with the number of Socket(s):\r$ lscpu To check total online memory Run the lsmem command and look for the value of online memory\r$ lsmem File Type in Linux One way to identify a file type is by making use of the file command. $ file /home/michael\r$ file bash-script.sh\r$ file insync1000.sock\r$ file /home/michael/bash-script Another way to identify a file type is by making use of the ls -ld command ls -ld /home/michael\rls -l basg-script.sh Filesystem Hierarchy Linux uses single rooted, inverted tree like file system\n/home : It is the location that contains the home directories for all users, except the root user (root user home directory is located at /root)\n/opt : If you want to install any third party programs put them in the /opt filesystem.\n/mnt : It is the default mount point for any partition and it is empty by default. It is used to mount filesystems temporarly in the system\n/tmp : It is used to store temporary data\n/media : All external media is mounted on /media\n/dev : Contains the special block and character device files\n/bin : The basic programs such as binaries cp, mv, mkdir are located in the /bin directory\n/etc : It stores most of the configuration files in Linux.\n/lib : The directory /lib and /lib64 is the place to look for shared libraries to be imported into your program\n/usr : In older systems, /usr directory is used for User Home Directories, however in the modern linux operating systems it is the location where all user land applciations in their data reside\n/var : It contains variable data like mails, log files\nTo print all the mounted filesystems, run df (disk filesystem) command\n$ df -hP "
},
{
	"uri": "/2-prerequiste/2.4-packagemanagement/",
	"title": "Package Management",
	"tags": [],
	"description": "",
	"content": "\nIntroduction to Package Managers For Debain/Ubuntu, it is apt/dpkg and for CentOs/Redhat, it is RPM\nQuestion : What is the difference between CentOS, RHEL and Ubuntu*? There are hundreds of Linux distributions in use today One of the common ways to catagorize linux distribution is by the package manager it uses.\nFor example: Distributions such as RHEL, Fedora and CentOS. are based on RPM. Hence they are known as RPM based distribution. The Debian family including Ubuntu, Debian and Linux Mint e.t.c. make use of Debian based package managers such as the DPKG. What is a package? A package in its simplest defination is a compressed archieve that contains all the files that are required by a particular software to run. For example: Lets consider an Ubuntu System, we want to install a simple editing system such as gimp which stands for GNU Image Manipulation System. To do this, we can make use of the gimp.deb package which contains all the software binaries and files needed to for the image editor to run along with the metadata which provides the information about the software itself. Types of Package Managers RPM (Redhat Package Manager) RPM has five basic modes of operations. Each of these modes can be run using rpm command followed by a specific command options. Despite of this, RPM doesn\u0026rsquo;t resolve dependencies on its own. This is why we make use of a higher level of package manager called YUM.\nInstalling\nUninstalling\nUpgrade\nQuery\nVerfiying\nrpm-modes\nYUM (Yellowdog Updater Modifier) YUM is a free and opensource package manager.\nWorks on RPM based Linux systems\nWorks with Software repositories which are essentially a collection of packages and provides package independency management on RPM based distro. The repository information is stored in /etc/yum.repos.d/ and repository files will have the .repo extension.\nActs as a high level package manager but under the hood it still depeneds on RPM to manage packages on the linux systems.\nUnlike RPM, YUM handles package dependencies very well (Automatic Dependency Resolution). It is able to install any dependencies packages to get the base package install on the linux system.\nOnce yum runs sudo yum install httpd command is issued YUM first runs transaction check, if the package is not installed in the system yum checks the configured repositories under /etc/yum.repos.d/ for the availability of the requested package.\nIt also checks if there are any dependent packages are already installed in the system or if it needs to be upgrade.\nAfter this step, transaction summary is displayed on the screen for the user to review, if we wish to proceed with the install enter the y button (this step can be skipped by providing the -y flag with the yum install command).\nYum will download and install necessary RPMs to linux system\nIf you want to install or update a single package, use sudo yum install telnet and sudo yum update telnet command. If the package is already in the latest version in the repository and hence no action will be taken Common Commands To list all the repos added to your system. Run yum repolist $ yum repolist To check which package should be installed for specific command to work. Use yum provides command followed by name. $ yum provides scp To Install a package $ sudo yum install httpd To Install a package to automatically answer \u0026ldquo;yes\u0026rdquo; to any question prompt during the operation. Use -y flag with the yum install command. $ sudo yum install httpd -y To remove a package $ sudo yum remove httpd To update a package $ sudo yum update telnet To update all packages in the system, use the yum update command without any arguments. $ sudo yum update Lab - RPM and YUM Use an rpm command and find out the exact package name for wget installed in this server $ rpm -qa |grep wget To install a package for firefox browser that has been downloaded under /home/bob in the system. Caution: It might fail due to failed dependencies $ sudo rpm -ivh /home/bob/firefox-68.6.0-1.el7.centos.x86_64.rpm To install a package for firefox browser along with its dependencies $ sudo yum install firefox -y To check how many software repositories are configured for YUM in the system $ sudo yum repolist To check which package provides tcpdump command $ sudo yum provides tcpdump APT and APT-GET Amazon Linux, including Amazon Linux 2 and Amazon Linux AMI, does not support the apt-get package manager as it is based on RPM (Red Hat Package Manager) systems rather than Debian systems which use apt-get. Instead, Amazon Linux uses yum or dnf for package management.\nTo refresh a repository. Run apt update command. $ sudo apt update To install available upgrades of all packages currently installed on the system from the sources configured. $ sudo apt upgrade Another way to update the repository is to use apt edit-sources command. This opens up the /etc/apt/sources.list file in the text editor of your choice. $ sudo apt edit-sources To install the package $ sudo apt install telnet To remove the package $ sudo apt remove telnet To search or look for a package in the repository. $ sudo apt search telnet To list all the available packages $ sudo apt list |grep telnet Difference between APT vs APT-GET\nAPT is a more user friendly tool when compared to APT-GET In all the latest debian based distros APT is already installed by default. Lets try to install firefox package using both APT and APT-GET\nYou will notice APT does easy on the eyes, you get just enough information and also a nice little progress bar APT-GET is just effective and doesn\u0026rsquo;t provide the output in user-friendly format. Another comparision by search a telent package.\nYou will notice with apt, all its options are located in one place. You can search with apt search telnet command. On the other hand, you cannot use search command with apt-get command. Instead, you have to use another tool called apt-cache search telnet. If you compare the results of the two commands, you will also see the apt-cache throws in a lot of extra information in the search result, which may not be really useful for the end user. Lab - DPKG and APT To install a package for firefox browser which has been downloaded at /root/firefox.deb. The dependencies might fail. $ sudo dpkg -i /root/firefox.deb To install a package using APT $ sudo apt install firefox The package to install Chromium browser in the system. Use apt search functionality to locate the correct package name. The browser has the description of: Chromium web browser, open-source version of Chrome $ sudo apt search chromium-browser To install the chromium-browser sudo apt install -y chromium-browser To remove the firefox browser from the system. $ sudo apt remove firefox "
},
{
	"uri": "/2-prerequiste/2.5-filearchival/",
	"title": "File Compression and Archival",
	"tags": [],
	"description": "",
	"content": "Viewing file sizes du with -sk shows the size of a file or directory in Kilobytes $ du -sk test.img du with -sh shows the size of a file or directory in human readable format $ du -sh test.img we can also use long list , ls -lh to print the size of the file. $ ls -lh test.img Archiving Files tar is used to group multiple files and directories into a single file. Hence it is specially used for archiving data. $ tar -cf test.tar file1 file2 file3 $ ls -ltr test.tar The tar command followed by -tf option followed by the tar filename is used to see the contents of the tarball. $ tar -tf test.tar The tar command followed by -xf option followed by the tar filename is used to extract the contents from the tarball. $ tar -xf test.tar tar command followed by -zcf option is used to compress the tarball to reduce its size. $ tar -zcf test.tar Compression and Uncompression Let us now look at the three popular ones bzip2 (.bz2 extension) gzip (.gz extension) xz (.xz extension) $ bzip2 test.img\r$ gzip test1.img\r$ xz test2.img The compressed files can be uncompressed by using the below commands bunzip2 gunzip unxz $ bunzip2 test.img\r$ gunzip test1.img\r$ unxz test2.img Tools such as zcat , bzcat and xzcat allow the compressed files to be read without an uncompress $ zcat hostfile.txt.bz2\r$ zcat hostfile.txt.gz\r$ zcat hostfile.txt.xz Searching for files and Patterns Run locate command followed by the filename you are searching as an argument. This should return all paths matching the pattern. $ locate City.txt To manually update the DB, run the command updatedb and then run the locate command again $ sudo updatedb find $ find /home/michael -name City.txt Grep To search for the word second from the sample.txt $ grep second sample.txt To search for the word capital with case-insensitive use -i flag. $ grep -i capital sample.txt To search for a pattern recursively. $ grep -r \u0026#34;thrid Line\u0026#34; /home/michael To print the lines that don\u0026rsquo;t matches the pattern $ grep -v \u0026#34;printed\u0026#34; sample.txt Match a pattern that form a whole word $ grep -w exam examples.txt You can also combine multiple options together. For example, to reverse the search and print all lines of the same file that doesn\u0026rsquo;t match the whole word exam. Use grep -vw $ grep -vw exam examples.txt To print the number of lines after and before matching a pattern. Use grep command with -A and -B flags respectively. $ grep -A1 Arsenal premier-league-table.txt\r$ grep -B1 4 premier-league-table.txt The -A and -B can be combined into one single search. $ grep -A1 -B1 Chelsea premier-league-table.txt IO Redirection In this section, we will take a look at IO Redirection.\nIO Redirection Standard Streams in Linux There are three data streams created when you launch a linux commnad.\nStandard Input (STDIN) - STDIN is the standard input stream which accepts text as an input.\nStandard Output (STDOUT) - Text output is delivered as STDOUT or the standard out stream\nStandard ERROR (STDERR) - Error messages of the command are sent through the standard ERROR stream (STDERR)\nREDIRECT STDOUT To redirect STDOUT to a file instead of printing it on the screen. $ echo $SHELL \u0026gt; shell.txt To append STDOUT to an exisiting file $ echo $SHELL \u0026gt;\u0026gt; shell.txt REDIRECT STDERR To redirect just the ERROR message we need to use 2 followed by forward arrow \u0026gt; symbol and then the name of the filename in which the errors are written. $ cat missing_file 2\u0026gt; error.txt To append the STDERR to the exisiting file $ cat missing_file 2\u0026gt;\u0026gt; error.txt If you want to execute and not print ERROR messages on the screen even if it generates a standard ERROR. You can redirect to /dev/null $ cat missing_file 2\u0026gt; /dev/null Command Line Pipes Command Line Pipes allow the linking of multiple commands. $ grep Hello sample.txt | less STDIN and STDOUT is the tee command. Instead of the redirect operator, we can use the command line pipe (|) followed by tee command. $ echo $SHELL | tee shell.txt Use tee with -a option, to append instead of overwritting it $ echo \u0026#34;This is the bash shell\u0026#34; | tee -a Lab - Working With Shell Part - II Create a tarball of the directory called python and compress it using gzip. The compressed tar file should be available at /home/bob/python.tar.gz $ tar -cf /home/bob/python.tar /home/bob/reptile/snake/python\r$ gzip /home/bob/python.tar There is a compressed file called eaglet.dat.gz located under the eagle directory. Extract it in the same location $ gunzip /home/bob/birds/eagle/eaglet.dat.gz A file has been copied to the laptop by the name of caleston-code. But he does not remember which directory he saved it in.Can you find it? $ sudo find / -name caleston-code Find the location of the file called dummy.service and redirect its absolute path to the file /home/bob/dummy-service. You can use the redirect operator with the echo command to save the answer to the file. $ sudo find / -name dummy.service\r$ echo /etc/systemd/system/dummy.service \u0026gt; /home/bob/dummy-service Find the file under /etc directory that contains the string 172.16.238.197. Save the answer using the absolute path in the file /home/bob/ip $ sudo grep -ir 172.16.238.197 /etc/ \u0026gt; /home/bob/ip Create a new file called /home/bob/file_wth_data.txt. This file should have one line of text that says a file in my home directory. Make use of the redirect operator. $ echo \u0026#34;a file in my home directory\u0026#34; \u0026gt; /home/bob/file_wth_data.txt Run the command python3 /home/bob/my_python_test.py and redirect the standard error to the file /home/bob/py_error.txt. $ python3 /home/bob/my_python_test.py 2\u0026gt;/home/bob/py_error.txt Read the file /usr/share/man/man1/tail.1.gz and without extracting it copy the first line of this file to /home/bob/pipes $ zcat /usr/share/man/man1/tail.1.gz | head -1 \u0026gt; /home/bob/pipes Vi Editor The command to open the vi editor is vi followed by the filename that you want to create or append. $ vi /home/michael/sample.txt Command Mode Lab - VI Editor Go to insert mode Press i Exit from insert mode and go to command mode Press ESC To remove a character Move Cursor to the characters to be removed and press x to remove them Change the file contents to Welcome to KodeKloud and save file. Go to insert mode by pressing i and delete all content and type in new content. Once done press ESC key and go to command mode. Then type in command :w! Update the port it listens on from 80 to 5000 in apache webserver. Go to insert mode by pressing i and replace 80 with 5000 in line 10 Remove the line that starts with LogFormat. Go to the line 33 and press dd (d twice) to remove the entire line. To undo the previous change Press u to undo previous change There\u0026rsquo;s a 6 hiding in the file. Find it. find command /6 "
},
{
	"uri": "/2-prerequiste/2.6-securitypermission/",
	"title": "Security and File Permissions",
	"tags": [],
	"description": "",
	"content": "\nLinux Account User\u0026rsquo;s informations are stored under /etc/passwd file. $ cat /etc/passwd Information about groups is stored into /etc/group file. $ cat /etc/group The user also has a GID, the group id they are part of, id command can be use to check these details. for eg: $ id ec2-user\ruid=1001(ec2-user) gid=1001(ec2-user)groups=1001(ec2-user),1003(developers) More details about the user account can be found eg. default shell, home directory using. $ grep -i ec2-user /etc/passwd\rec2-user:x:1001:1001::/home/ec2-user:/bin/sh To see the list of users currently logged use who command. $ who\rbob pts/2 Apr 28 06:48 (172.16.238.187) The last command displays the record of all logged-in users along with the date and time when the system was rebooted. $ last\rec2-user :1 :1 Tue May 12 20:00 still logged in\rsarah :1 :1 Tue May 12 12:00 still running\rreboot system boot 5.3.0-758-gen Mon May 11 13:00 - 19:00 (06:00) Switching users To switch to any user use su command. $ su –\rPassword:\rroot ~# To run a specific command you can use su -c \u0026ldquo;whoami\u0026rdquo; (This is not recommended way) [ec2-user@ubuntu-server ~]$ su -c \u0026#34;whoami\u0026#34;\rPassword:\rroot To run a command as a root user sudo command is recommended. [ec2-user@ubuntu-server ~]$ sudo apt-get install nginx\r[sudo] password for ec2-user: Users listed in /etc/sudoers file can make use of sudo command for privledge escalation. $ cat /etc/sudoers To restrict anyone from directly login as root login, this can be done by setting nologin shell. $ grep -i ^root /etc/passwd\r/root:x:0:0:root:/root:/usr/sbin/nologin User Add To create a new local user bob in the system use useradd command. $ useradd bob To get more details about bob account like, home director, uid, and shell use /etc/passwd Amazon Linux, including Amazon Linux 2 and Amazon Linux AMI, does not support the apt-get package manager as it is based on RPM (Red Hat Package Manager) systems rather than Debian systems which use apt-get. Instead, Amazon Linux uses yum or dnf for package management.\n$ grep -i bob /etc/passwd\rbob:x:1002:1002::/home/bob:/bin/sh To check the uid or username of the user logged in user whoami command. $ whoami\rbob All user\u0026rsquo;s password are store under /etc/shadow $ grep -i bob /etc/shadow\rbob:!:18341:0:99999:7::: To change the password of current user use passwd or for any specific user use passwd $ passwd bob\rChanging password for user bob.\rNew UNIX password:\rRetype new UNIX password:\rpasswd: all authentication tokens updated\rsuccessfully. Managing Users useradd command be used along with many attributes as show below. $ useradd -u 1009 -g 1009 -d /home/robert -s /bin/bash -c ”Mercury Project member\u0026#34; bob\r$ id bob\r$ grep -i bob /etc/passwd ACCESS CONTROL FILES To get more details about one\u0026rsquo;s account for example bob account, home director, uid, and shell check /etc/passwd $ grep -i ^bob /etc/passwd\rbob:x:1002:1002::/home/bob:/bin/sh\rUSERNAME:PASSWORD:UID:GID:GECOS:HOMEDIR:SHELL Password are stored under /etc/shadow $ grep -i ^bob /etc/shadow\rbob:$6$0h0utOtO$5JcuRxR7y72LLQk4Kdog7u09LsNFS0yZPkIC8pV9tgD0wXCHutY\rcWF/7.eJ3TfGfG0lj4JF63PyuPwKC18tJS.:18188:0:99999:7:::\rUSERNAME:PASSWORD:LASTCHANGE:MINAGE:MAXAGE:WARN:INACTIVE:EXPDATE Check the groups bob belongs too $ grep -i ^bob /etc/group\rdeveloper:x:1001:bob,ec2-user\rNAME:PASSWORD:GID:MEMBERS LINUX FILE PERMISSIONS Directory Permission To list the directory permission use $ ls -ld /home/bob/random_dir To know the current user $ whoami To change the change the directory $ cd /home/bob/random_dir Modifying file permissions Use chmod command to modify the file permissions.\nProvide full access to owners $ chmod u+rwx test-file Provide Read access to Owners, groups and others, Remove execute access $ chmod ugo+r-x test-file Remove all access for others $ chmod o-rwx test-file Full access for Owner, add read , remove execute for group and no access for others $ chmod u+rwx,g+r-x,o-rwx test-file Chomd Permission File Provide full access to Owners, group and others $ chmod 777 test-file Provide Read and execute access to Owners,groups and others $ chmod 777 test-file Read and Write access for Owner and Group, No access for others. $ chmod 660 test-file Full access for Owner, read and execute for group and no access for others. $ chmod 750 test-file Change Ownership Changes owner to bob and group to developer $ chown bob:developer test-file Changes just the owner of the file to bob. Group unchanged. $ chown bob andoid.apk Change the group for the test-file to the group called android. $ chgrp android test-file SSH To login to the remote server use ssh command with hostname or IP address. ssh \u0026lt;hostname OR IP Address\u0026gt; To login to the remote server with specific username and password. ssh \u0026lt;user\u0026gt;@\u0026lt;hostname OR IP Address\u0026gt; -l attribute can also be used as ssh –l \u0026lt;user\u0026gt; \u0026lt;hostname OR IP Address\u0026gt; Password-Less Authentication To generate a keypair on the Client run this command $ ssh-keygen –t rsa Public and Private key are stored at below location. Public Key: /home/bob/.ssh/id_rsa.pub\rPrivate Key: /home/bob/.ssh/id_rsa SCP To copy a compresses file to a remote server $ scp /home/bob/caleston-code.tar.gz devapp01:/home/bob To copy a directory to a remote server $ scp –pr /home/bob/media/ devapp01:/home/bob "
},
{
	"uri": "/2-prerequiste/2.7-networking/",
	"title": "Netwoking",
	"tags": [],
	"description": "",
	"content": "Ping Ping Command is use to check the remote machine is reachable or not. $ ping 192.168.1.11\rReply from 192.168.1.11: bytes=32 time=4ms TTL=117\rReply from 192.168.1.11: bytes=32 time=4ms TTL=117 To Ping the remote host with a name instead of IP Address make an entry in /etc/hosts file $ ping db\rping: unknow host db To Ping the remote host with a name instead of IP Address make an entry in /etc/hosts file $ cat \u0026gt;\u0026gt; /etc/hosts\r192.168.1.11 db $ ping db\rPING db (192.168.1.11) 56(84) bytes of data.\r64 bytes from db (192.168.1.11): icmp_seq=1 ttl=64 time=0.052 ms\r64 bytes from db (192.168.1.11): icmp_seq=2 ttl=64 time=0.079 ms Name Resolution DNS The domain name system is a distributed way to share these name-to-IP associations instead of requiring each computer to synchronize a hosts file. A name server publishes the IP address for a domain and provides a single location to update when an IP changes.\nDOMAIN NAMES .com - Commerical or General Purpose. .net - Network or General Purpose. .edu - Education Purpose .org - Organizations for non profit organizations etc. Record Types A - IP to host names. AAAA - Storing ipv6 to hostnames. CNAME - Mapping one name to another. To test the DNS resolution you can use nslookup command, this will query a hostname from a DNS Server. $ nslookup www.google.com\rServer: 8.8.8.8\rAddress: 8.8.8.8#53\rNon-authoritative answer:\rName: www.google.com\rAddress: 172.217.0.132 Another useful tool to query a hostname from a DNS server is dig which return more detailed information as shown. $ dig www.google.com\r; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.10.3-P4-Ubuntu \u0026lt;\u0026lt;\u0026gt;\u0026gt; www.google.com\r;; global options: +cmd\r;; Got answer:\r;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 28065\r;; flags: qr rd ra; QUERY: 1, ANSWER: 6, AUTHORITY: 0, ADDITIONAL: 1\r;; OPT PSEUDOSECTION:\r; EDNS: version: 0, flags:; udp: 512\r;; QUESTION SECTION:\r;www.google.com. IN A\r;; ANSWER SECTION:\rwww.google.com. 245 IN A 64.233.177.103\rwww.google.com. 245 IN A 64.233.177.105\rwww.google.com. 245 IN A 64.233.177.147\rwww.google.com. 245 IN A 64.233.177.106\rwww.google.com. 245 IN A 64.233.177.104\rwww.google.com. 245 IN A 64.233.177.99\r;; Query time: 5 msec\r;; SERVER: 8.8.8.8#53(8.8.8.8)\r;; WHEN: Sun Mar 24 04:34:33 UTC 2019\r;; MSG SIZE rcvd: 139 Switching To see the interfaces on the hosts use ip link command $ ip link\reth0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP mode\rDEFAULT group default qlen 1000 To connect to the switch we use ip addr add command $ ip addr add 192.168.1.10/24 dev eth0 Default Gateway To configure a gateway on system B to reach the system on other network run $ ip route add 192.168.1.0/24 via 192.168.2.1 To see the existing routing table configuration run the route command. $ route Check Interfaces Use the ip link to ensure the primary interface is up. $ ip link\r1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc\rnoqueue state UNKNOWN mode DEFAULT group default qlen 1000\rlink/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\r2: enp1s0f1: \u0026lt;BROADCAST,BROADCAST,MULTICAST,UP\u0026gt; mtu 1500 qdisc\rfq_codel state UP mode DEFAULT group default qlen 1000\rlink/ether 08:97:98:6e:55:4d brd ff:ff:ff:ff:ff:ff Check if we can resolve the hostname to IP address via nslookup $ nslookup caleston-repo-01\rServer: 192.168.1.100\rAddress: 192.168.1.100 #53\rNon-authoritative answer:\rName: caleston-repo-01\rAddress: 192.168.2.5 ping to check the connectivity. $ ping caleston-repo-01\rPING caleston-repo-01 (192.168.2.5) 56(84) bytes of data.\r--- localhost ping statistics ---\r3 packets transmitted, 0 received, 100% packet loss, time 2034ms traceroute to check the number of hops between the source. $ traceroute 192.168.2.5\rTracing route to example.com [192.168.2.5]\rover a maximum of 30 hops:\r1 \u0026lt;1 ms \u0026lt;1 ms \u0026lt;1 ms 192.168.1.1\r2 \u0026lt;2 ms \u0026lt;1 ms \u0026lt;1 ms 192.168.2.1\r3 * * * Request timed out. To check the port status use netstat command and to use it along with port number use below command. $ netstat -an | grep 80 | grep -i LISTEN "
},
{
	"uri": "/2-prerequiste/2.8-storage/",
	"title": "Storage in Linux",
	"tags": [],
	"description": "",
	"content": "\nIntroduction to Storage Basic List all Block devices\nBlock devices are special files that refer to or represent a device (which could be anything from a hard drive to a USB drive). So naturally, there are command line tools that help you with your block devices-related work.\nMajor Number is used to identigy the type of block device, value 8 represent a SCSI device starts with SD. Minor Number is uset to distuinguish individual, physical or logical devices. $ lsblk $ ls -l /dev/ | grep \u0026#34;^b\u0026#34; To Print,Create and Delete the parition table use fdisk -l command $ sudo fdisk -l /dev/sda PARTITION TYPES – PRIMARY, EXTENDED AND LOGICAL Createting Partitions $ gdisk /dev/sdb\rGPT fdisk (gdisk) version 1.0.1\rPartition table scan:\rMBR: protective\rBSD: not present\rAPM: not present\rGPT: present\rFound valid GPT with protective MBR; using GPT.\rCommand (? for help): ?\rb back up GPT data to a file\rc change a partition\u0026#39;s name\rd delete a partition\ri show detailed information on a partition\rl list known partition types\rn add a new partition\ro create a new empty GUID partition table (GPT)\rp print the partition table\rq quit without saving changes\rr recovery and transformation options (experts only)\rs sort partitions\rt change a partition\u0026#39;s type code\rv verify disk\rw write table to disk and exit\rx extra functionality (experts only)\r? print this menu\rCommand (? for help): n\rPartition number (1-128, default 1): 1\rFirst sector (34-41943006, default = 2048) or {+-}size{KMGTP}: 2048\rInformation: Moved requested sector from 34 to 2048 in\rorder to align on 2048-sector boundaries.\rUse \u0026#39;l\u0026#39; on the experts\u0026#39; menu to adjust alignment\rLast sector (2048-41943006, default = 41943006) or {+-}size{KMGTP}: 41943006\rCurrent type is \u0026#39;Linux filesystem\u0026#39;\rHex code or GUID (L to show codes, Enter = 8300):\rChanged type of partition to \u0026#39;Linux filesystem\u0026#39;\rCommand (? for help): w\rFinal checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING\rPARTITIONS!!\rDo you want to proceed? (Y/N): Y\rOK; writing new GUID partition table (GPT) to /dev/vdb.\rThe operation has completed successfully. $ sudo fdisk -l /dev/sdb\rDisk /dev/sdb: 20 GiB, 128035676160 bytes, 250069680 sectors\rUnits: sectors of 1 * 512 = 512 bytes\rSector size (logical/physical): 512 bytes / 512 bytes\rI/O size (minimum/optimal): 512 bytes / 512 bytes\rDisklabel type: gpt\rDisk identifier: 7CABF26E-9723-4406-ZEA1-C2B9B6270A23\rDevice Start End Sectors Size Type\r/dev/sdb1 2048 41943006 204800 20GB Linux filesystem Working with Ext4 To create a file system we will make use of /dev/sdb disk, run below command $ mkfs.ext4 /dev/sdb1 Now create a directory to mount the filesystem use below commands $ mkdir /mnt/ext4;\r$ mount /dev/sdb1 /mnt/ext4 To verify if the filesystem is mounted use $ mount | grep /dev/sdb1\r$ df -hP | grep /dev/sdb1 NFS NFS server maintains an export configuration file at /etc/exports that defines the clients which should be able to access the directories on the server. /etc/exports looks like this $ /etc/exports\r/software/repos 10.61.35.201 10.61.35.202 10.61.35.203 To exports all the mounts defined in /etc/exports use $ exportfs -a $ exportfs -o 10.61.35.201:/software/repos Working with Logical Volume Manager To make use of LVM, install the package LVM . $ apt-get install lvm2 Use pvcreate command to create a Physical Volume. $ pvcreate /dev/sdb\rPhysical volume \u0026#34;/dev/sdb\u0026#34; successfully created Use vgcreate command to create a Volume Group. $ vgcreate caleston_vg /dev/sdb\rVolume group \u0026#34;caleston_vg\u0026#34; successfully created Use pvdisplay command to list all the PVs their names, size and the Volume group it is part of. $ pvdisplay\r--- Physical volume ---\rPV Name /dev/sdb\rVG Name caleston_vg\rPV Size 20.00 GiB / not usable 3.00 MiB\rAllocatable yes\rPE Size 4.00 MiB\rTotal PE 5119\rFree PE 5119\rAllocated PE 0\rPV UUID iDCXIN-En2h-5ilJ-Yjqv-GcsR-gDfV-zaf66E Use vgdisplay to see more details of the VG. $ vgdisplay\r--- Volume group ---\rVG Name caleston_vg\rSystem ID\rFormat lvm2\rMetadata Areas 1\rMetadata Sequence No 1\rVG Access read/write\rVG Status resizable\rMAX LV 0\rCur LV 0\rOpen LV 0\rMax PV 0\rCur PV 1\rAct PV 1\rVG Size 20.00 GiB\rPE Size 4.00 MiB\rTotal PE 5119\rAlloc PE / Size 0 / 0\rFree PE / Size 5119 / 20.00 GiB\rVG UUID VzmIAn-9cEl5bA-lVtm-wHKX-KQaObR To create the Logical Volumes, you can use lvcreate command $ lvcreate –L 1G –n vol1 caleston_vg\rLogical volume \u0026#34;vol1\u0026#34; created. To display the Logical Volumes, you can use lvdisplay command $ lvdisplay\r--- Logical volume ---\rLV Path /dev/caleston_vg/vol1\rLV Name vol1\rVG Name caleston_vg\rLV UUID LueYC3-VWpE31-UaYk-wjIR-FjAOyL\rLV Write Access read/write\rLV Creation host, time master, 2020-03-31 06:26:14\rLV Status available\r# open 0\rLV Size 1.00 GiB\rCurrent LE 256\rSegments 1\rAllocation inherit\rRead ahead sectors auto\r- currently set to 256\rBlock device 252:0 To list the volume, you can use lvs command $ lvs\rLV VG Attr LSize Pool\rvol1 caleston_vg -wi-a----- 1.00g Now to create an filesystem you can use mkfs command $ mkfs.ext4 /dev/caleston_vg/vol1 To mount the filesystem use mount command $ mount –t ext4 /dev/caleston_vg/vol1 /mnt/vol1 Now logical volume is now available for use. Lets resize the filesystem on vol1 while it is mounted. Check the free space available. $ vgs\rVG #PV #LV #SN Attr VSize VFree\rcaleston_vg 1 1 0 wz--n- 20.00g 19.00g $ lvresize -L +1G -n /dev/caleston_vg/vol1\rLogical volume vol1 successfully resized. $ df –hP /mnt/vol1\rFilesystem Size Used Avail Use% Mounted on\r/dev/mapper/caleston_vg-vol1 976M 1.3M 908M 1% /mnt/vol1 Now to resize the file system use resize2fs command. $ resize2fs /dev/caleston_vg/vol1\rresize2fs 1.42.13 (17-May-2015)\rFilesystem at /dev/mapper/caleston_vg-vol1 is mounted on\r/mnt/vol1; on-line resizing required\rold_desc_blocks = 1, new_desc_blocks = 1\rThe filesystem on //dev/mapper/caleston_vg-vol1 is now 524288\r(4k) blocks long. Now run df -hp command to verify the size of the mounted filesystem $ df –hP /mnt/vol1\rFilesystem Size Used Avail Use% Mounted on\r/dev/mapper/caleston_vg-vol1 2.0G 1.6M 1.9G 1% /mnt/vol1 "
},
{
	"uri": "/2-prerequiste/2.9-systemctl/",
	"title": "Service Management with SYSTEMD",
	"tags": [],
	"description": "",
	"content": "Systemctl Commands To start a service use the start command, for example to start a docker service use systemctl start docker $ systemctl start docker To stop a service use the stop command, for example to stop a docker service use systemctl stop docker $ systemctl stop docker To restart a service use the restart command, for example to restart a docker service use systemctl restart docker this will stop and start again. $ systemctl restart docker To reload a service use the reload command, for example to reload a docker service use systemctl reload docker, this will reload all the configuration without interrupting the normal functionaltiy of the service $ systemctl reload docker To enable a service and make it persistent accross reboots use the enable command, for example to enable a docker service use systemctl enable docker $ systemctl enable docker To disable a service at boot use the disable command, for example to disable a docker service use systemctl disable docker command. $ systemctl disable docker To know the status of the service use systemctl status docker command. This command provided the state of the service. If running properly is should show active (running) state as shown in screenshot below. $ systemctl status docker To see the current runlevel use systemctl get-default $ systemctl get default To change the runleve to a different target use systemctl set-default multi-user.target $ systemctl set-default multi-user.target To list all the units that systemd has loaded use systemctl list-units \u0026ndash;all, this lists all the unit which are active, inactive or anyother state. $ systemctl list-units --all To list only active units use systemctl list-units command $ systemctl list-units JOURNALCTL Using journalctl commands print all the log entries from oldest to the newest. $ journalctl Using journalctl -b command print all the logs from the current boot. $ journalctl -b Using journalctl -u docker.service command print all the logs specific to the unit specified, for example docker in this case. $ journalctl -u docker.service Using journalctl -u docker.service \u0026ndash;since command print all the logs specific to the unit specified since the given time, for example docker in this case. $ journalctl -u docker.service --since \u0026#34;2022-01-01 13:45:00\u0026#34; "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]